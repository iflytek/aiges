// Code generated by protoc-gen-go. DO NOT EDIT.
// source: engservice.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	engservice.proto

It has these top-level messages:
	MetaData
	EngInputData
	EngOutputData
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation frame at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 数据类型
type MetaData_DataType int32

const (
	MetaData_TEXT  MetaData_DataType = 0
	MetaData_AUDIO MetaData_DataType = 1
	MetaData_IMAGE MetaData_DataType = 2
	MetaData_VIDEO MetaData_DataType = 3
)

var MetaData_DataType_name = map[int32]string{
	0: "TEXT",
	1: "AUDIO",
	2: "IMAGE",
	3: "VIDEO",
}
var MetaData_DataType_value = map[string]int32{
	"TEXT":  0,
	"AUDIO": 1,
	"IMAGE": 2,
	"VIDEO": 3,
}

func (x MetaData_DataType) String() string {
	return proto.EnumName(MetaData_DataType_name, int32(x))
}
func (MetaData_DataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// 数据状态
type MetaData_DataStatus int32

const (
	MetaData_BEGIN    MetaData_DataStatus = 0
	MetaData_CONTINUE MetaData_DataStatus = 1
	MetaData_END      MetaData_DataStatus = 2
	MetaData_ONCE     MetaData_DataStatus = 3
)

var MetaData_DataStatus_name = map[int32]string{
	0: "BEGIN",
	1: "CONTINUE",
	2: "END",
	3: "ONCE",
}
var MetaData_DataStatus_value = map[string]int32{
	"BEGIN":    0,
	"CONTINUE": 1,
	"END":      2,
	"ONCE":     3,
}

func (x MetaData_DataStatus) String() string {
	return proto.EnumName(MetaData_DataStatus_name, int32(x))
}
func (MetaData_DataStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

// 数据状态
type EngOutputData_DataStatus int32

const (
	EngOutputData_BEGIN    EngOutputData_DataStatus = 0
	EngOutputData_CONTINUE EngOutputData_DataStatus = 1
	EngOutputData_END      EngOutputData_DataStatus = 2
	EngOutputData_ONCE     EngOutputData_DataStatus = 3
)

var EngOutputData_DataStatus_name = map[int32]string{
	0: "BEGIN",
	1: "CONTINUE",
	2: "END",
	3: "ONCE",
}
var EngOutputData_DataStatus_value = map[string]int32{
	"BEGIN":    0,
	"CONTINUE": 1,
	"END":      2,
	"ONCE":     3,
}

func (x EngOutputData_DataStatus) String() string {
	return proto.EnumName(EngOutputData_DataStatus_name, int32(x))
}
func (EngOutputData_DataStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// 元数据信息
type MetaData struct {
	DataId   string              `protobuf:"bytes,1,opt,name=data_id,json=dataId" json:"data_id,omitempty"`
	FrameId  uint32              `protobuf:"varint,2,opt,name=frame_id,json=frameId" json:"frame_id,omitempty"`
	DataType MetaData_DataType   `protobuf:"varint,3,opt,name=data_type,json=dataType,enum=protocol.MetaData_DataType" json:"data_type,omitempty"`
	Status   MetaData_DataStatus `protobuf:"varint,4,opt,name=status,enum=protocol.MetaData_DataStatus" json:"status,omitempty"`
	Format   string              `protobuf:"bytes,5,opt,name=format" json:"format,omitempty"`
	Encoding string              `protobuf:"bytes,6,opt,name=encoding" json:"encoding,omitempty"`
	Data     []byte              `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Desc     map[string][]byte   `protobuf:"bytes,8,rep,name=desc" json:"desc,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *MetaData) Reset()                    { *m = MetaData{} }
func (m *MetaData) String() string            { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()               {}
func (*MetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MetaData) GetDataId() string {
	if m != nil {
		return m.DataId
	}
	return ""
}

func (m *MetaData) GetFrameId() uint32 {
	if m != nil {
		return m.FrameId
	}
	return 0
}

func (m *MetaData) GetDataType() MetaData_DataType {
	if m != nil {
		return m.DataType
	}
	return MetaData_TEXT
}

func (m *MetaData) GetStatus() MetaData_DataStatus {
	if m != nil {
		return m.Status
	}
	return MetaData_BEGIN
}

func (m *MetaData) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *MetaData) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *MetaData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MetaData) GetDesc() map[string][]byte {
	if m != nil {
		return m.Desc
	}
	return nil
}

type EngInputData struct {
	//
	// 业务参数包含用户自定义业务参数及框架约束参数
	EngParam map[string]string `protobuf:"bytes,1,rep,name=eng_param,json=engParam" json:"eng_param,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DataList []*MetaData       `protobuf:"bytes,2,rep,name=data_list,json=dataList" json:"data_list,omitempty"`
}

func (m *EngInputData) Reset()                    { *m = EngInputData{} }
func (m *EngInputData) String() string            { return proto.CompactTextString(m) }
func (*EngInputData) ProtoMessage()               {}
func (*EngInputData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EngInputData) GetEngParam() map[string]string {
	if m != nil {
		return m.EngParam
	}
	return nil
}

func (m *EngInputData) GetDataList() []*MetaData {
	if m != nil {
		return m.DataList
	}
	return nil
}

type EngOutputData struct {
	Ret      int32                    `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Err      string                   `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	Status   EngOutputData_DataStatus `protobuf:"varint,3,opt,name=status,enum=protocol.EngOutputData_DataStatus" json:"status,omitempty"`
	DataList []*MetaData              `protobuf:"bytes,4,rep,name=data_list,json=dataList" json:"data_list,omitempty"`
}

func (m *EngOutputData) Reset()                    { *m = EngOutputData{} }
func (m *EngOutputData) String() string            { return proto.CompactTextString(m) }
func (*EngOutputData) ProtoMessage()               {}
func (*EngOutputData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EngOutputData) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *EngOutputData) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *EngOutputData) GetStatus() EngOutputData_DataStatus {
	if m != nil {
		return m.Status
	}
	return EngOutputData_BEGIN
}

func (m *EngOutputData) GetDataList() []*MetaData {
	if m != nil {
		return m.DataList
	}
	return nil
}

func init() {
	proto.RegisterType((*MetaData)(nil), "protocol.MetaData")
	proto.RegisterType((*EngInputData)(nil), "protocol.EngInputData")
	proto.RegisterType((*EngOutputData)(nil), "protocol.EngOutputData")
	proto.RegisterEnum("protocol.MetaData_DataType", MetaData_DataType_name, MetaData_DataType_value)
	proto.RegisterEnum("protocol.MetaData_DataStatus", MetaData_DataStatus_name, MetaData_DataStatus_value)
	proto.RegisterEnum("protocol.EngOutputData_DataStatus", EngOutputData_DataStatus_name, EngOutputData_DataStatus_value)
}

func init() { proto.RegisterFile("engservice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 479 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x41, 0x6b, 0xdb, 0x4c,
	0x10, 0xcd, 0x5a, 0xb2, 0xbc, 0x9a, 0xcf, 0xf9, 0x58, 0x86, 0xd2, 0xaa, 0x6e, 0x0b, 0x42, 0xf4,
	0xa0, 0x93, 0x5b, 0x52, 0x42, 0x4d, 0x7a, 0x72, 0x63, 0x11, 0x04, 0x8d, 0x54, 0x14, 0xa7, 0xf4,
	0x16, 0xb6, 0xd2, 0xc6, 0x88, 0xda, 0x92, 0x90, 0xd6, 0x01, 0xff, 0xba, 0xfe, 0x88, 0xde, 0xfa,
	0x6b, 0xca, 0xae, 0x64, 0x3b, 0xa6, 0x29, 0x81, 0x5e, 0xec, 0xf7, 0x76, 0xe7, 0xbd, 0xd5, 0x9b,
	0x19, 0x60, 0xa2, 0x58, 0x5c, 0x89, 0xfa, 0x2e, 0x4f, 0xc5, 0xb8, 0xaa, 0x4b, 0x59, 0x22, 0xd5,
	0x7f, 0x69, 0xb9, 0xf4, 0x7e, 0x1a, 0x40, 0x2f, 0x85, 0xe4, 0x33, 0x2e, 0x39, 0x3e, 0x83, 0x41,
	0xc6, 0x25, 0xbf, 0xc9, 0x33, 0x87, 0xb8, 0xc4, 0xb7, 0x13, 0x4b, 0xd1, 0x30, 0xc3, 0xe7, 0x40,
	0x6f, 0x6b, 0xbe, 0x12, 0xea, 0xa6, 0xe7, 0x12, 0xff, 0x38, 0x19, 0x68, 0x1e, 0x66, 0x38, 0x01,
	0x5b, 0x6b, 0xe4, 0xa6, 0x12, 0x8e, 0xe1, 0x12, 0xff, 0xff, 0x93, 0x17, 0xe3, 0xad, 0xfd, 0x78,
	0x6b, 0x3d, 0x56, 0x3f, 0xf3, 0x4d, 0x25, 0x12, 0x9a, 0x75, 0x08, 0x4f, 0xc1, 0x6a, 0x24, 0x97,
	0xeb, 0xc6, 0x31, 0xb5, 0xec, 0xd5, 0x5f, 0x64, 0x57, 0xba, 0x28, 0xe9, 0x8a, 0xf1, 0x29, 0x58,
	0xb7, 0x65, 0xbd, 0xe2, 0xd2, 0xe9, 0xb7, 0xdf, 0xd8, 0x32, 0x1c, 0x01, 0x15, 0x45, 0x5a, 0x66,
	0x79, 0xb1, 0x70, 0x2c, 0x7d, 0xb3, 0xe3, 0x88, 0x60, 0xaa, 0x67, 0x9d, 0x81, 0x4b, 0xfc, 0x61,
	0xa2, 0x31, 0xbe, 0x05, 0x33, 0x13, 0x4d, 0xea, 0x50, 0xd7, 0xf0, 0xff, 0x3b, 0x79, 0xf9, 0xd0,
	0xe3, 0xa2, 0x49, 0x83, 0x42, 0xd6, 0x9b, 0x44, 0x57, 0x8e, 0xde, 0x83, 0xbd, 0x3b, 0x42, 0x06,
	0xc6, 0x77, 0xb1, 0xe9, 0xfa, 0xa4, 0x20, 0x3e, 0x81, 0xfe, 0x1d, 0x5f, 0xae, 0x85, 0xee, 0xd0,
	0x30, 0x69, 0xc9, 0x59, 0x6f, 0x42, 0xbc, 0x53, 0xa0, 0xdb, 0xfc, 0x48, 0xc1, 0x9c, 0x07, 0x5f,
	0xe7, 0xec, 0x08, 0x6d, 0xe8, 0x4f, 0xaf, 0x67, 0x61, 0xcc, 0x88, 0x82, 0xe1, 0xe5, 0xf4, 0x22,
	0x60, 0x3d, 0x05, 0xbf, 0x84, 0xb3, 0x20, 0x66, 0x86, 0x37, 0x01, 0xd8, 0xe7, 0x57, 0x17, 0x1f,
	0x83, 0x8b, 0x30, 0x62, 0x47, 0x38, 0x04, 0x7a, 0x1e, 0x47, 0xf3, 0x30, 0xba, 0x0e, 0x18, 0xc1,
	0x01, 0x18, 0x41, 0x34, 0x63, 0x3d, 0x65, 0x1d, 0x47, 0xe7, 0x01, 0x33, 0xbc, 0x1f, 0x04, 0x86,
	0x41, 0xb1, 0x08, 0x8b, 0x6a, 0x2d, 0xf5, 0x64, 0xa7, 0x60, 0x8b, 0x62, 0x71, 0x53, 0xf1, 0x9a,
	0xaf, 0x1c, 0xa2, 0x13, 0xbf, 0xde, 0x27, 0xbe, 0x5f, 0xaa, 0xc8, 0x67, 0x55, 0xd6, 0x26, 0xa7,
	0xa2, 0xa3, 0xf8, 0xa6, 0x1b, 0xf4, 0x32, 0x6f, 0xa4, 0xd3, 0xd3, 0x16, 0xf8, 0x67, 0xd3, 0xda,
	0xf9, 0x7e, 0xca, 0x1b, 0x39, 0xfa, 0x00, 0xc7, 0x07, 0x5e, 0x8f, 0xb5, 0xcc, 0xbe, 0xdf, 0xb2,
	0x5f, 0x44, 0xab, 0xe3, 0xb5, 0xdc, 0x46, 0x60, 0x60, 0xd4, 0x42, 0x6a, 0x75, 0x3f, 0x51, 0x50,
	0x9d, 0x88, 0xba, 0xee, 0xb4, 0x0a, 0xe2, 0xd9, 0x6e, 0xa5, 0xda, 0x4d, 0xf4, 0x0e, 0x32, 0xee,
	0xcd, 0x1e, 0xda, 0xab, 0x83, 0x7c, 0xe6, 0xe3, 0xf9, 0xfe, 0x7d, 0x3c, 0xdf, 0x2c, 0x6d, 0xfb,
	0xee, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x22, 0x18, 0xf1, 0x99, 0x03, 0x00, 0x00,
}
