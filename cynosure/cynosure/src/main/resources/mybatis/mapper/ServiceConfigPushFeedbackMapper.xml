<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iflytek.ccr.polaris.cynosure.mapper.ServiceConfigPushFeedbackMapper">
    <!--服务配置推送反馈实体-->
    <resultMap id="ServiceConfigPushFeedback_ResultMap"
               type="com.iflytek.ccr.polaris.cynosure.domain.ServiceConfigPushFeedback">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="push_id" property="pushId" jdbcType="VARCHAR"/>
        <result column="project" property="project" jdbcType="VARCHAR"/>
        <result column="service_group" property="serviceGroup" jdbcType="VARCHAR"/>
        <result column="service" property="service" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="config" property="config" jdbcType="VARCHAR"/>
        <result column="addr" property="addr" jdbcType="VARCHAR"/>
        <result column="update_status" property="updateStatus" jdbcType="TINYINT"/>
        <result column="load_status" property="loadStatus" jdbcType="TINYINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="load_time" property="loadTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="gray_group_id" property="grayGroupId" jdbcType="VARCHAR"/>
        <result column="gray_group_name" property="grayGroupName" jdbcType="VARCHAR"/>
    </resultMap>

    <!--服务配置推送反馈列名-->
    <sql id="ServiceConfigPushFeedback_Column_List">
        id, push_id, project, service_group, service, version, config, addr, update_status,
        load_status, update_time, load_time, create_time, gray_group_id,gray_group_name
    </sql>

    <!--保存服务配置推送反馈-->
    <insert id="insert" parameterType="com.iflytek.ccr.polaris.cynosure.domain.ServiceConfigPushFeedback">
        insert into tb_service_config_push_feedback (id, push_id, project,
        service_group, service, version,gray_group_id,
        config, addr, update_status,
        load_status, update_time, load_time,
        create_time)
        values (#{id,jdbcType=VARCHAR}, #{pushId,jdbcType=VARCHAR}, #{project,jdbcType=VARCHAR},
        #{serviceGroup,jdbcType=VARCHAR}, #{service,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR},#{grayGroupId,jdbcType=VARCHAR},
        #{config,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, #{updateStatus,jdbcType=TINYINT},
        #{loadStatus,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, #{loadTime,jdbcType=TIMESTAMP},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <!--删除服务配置推送反馈-->
    <delete id="deleteByPushId" parameterType="java.lang.String">
        delete from tb_service_config_push_feedback
        where push_id = #{pushId,jdbcType=VARCHAR}
    </delete>

    <!--通过pushIds删除服务配置推送反馈-->
    <delete id="deleteByPushIds" parameterType="java.util.List">
        delete from tb_service_config_push_feedback
        where push_id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!--查询服务配置推送反馈总数-->
    <select id="findTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT COUNT(*) FROM (
        SELECT * FROM tb_service_config_push_feedback
        <where>
            <if test="pushId != null">
                and push_id = #{pushId,jdbcType=VARCHAR}
            </if>
        </where>
        ) AS temp1 LEFT JOIN ( SELECT tb_gray_group.id gray_group_id, tb_gray_group.`name` gray_group_name FROM
        tb_gray_group) AS temp2
        ON temp1.gray_group_id=temp2.gray_group_id
    </select>

    <!--查询服务配置推送反馈列表-->
    <select id="findList" resultMap="ServiceConfigPushFeedback_ResultMap" parameterType="java.util.Map">
        SELECT temp1.*, temp2.gray_group_name FROM (
        SELECT * FROM tb_service_config_push_feedback
        <where>
            <if test="pushId != null">
                and push_id = #{pushId,jdbcType=VARCHAR}
            </if>
        </where>
        ) AS temp1 LEFT JOIN ( SELECT tb_gray_group.id gray_group_id, tb_gray_group.`name` gray_group_name FROM
        tb_gray_group) AS temp2
        ON temp1.gray_group_id=temp2.gray_group_id
        order by convert(id,SIGNED) desc
        <if test="startIndex !=null and pagesize !=null">
            limit #{startIndex},#{pagesize}
        </if>
    </select>
</mapper>